name: AI Attribution

on:
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review, edited]

permissions:
  contents: read
  pull-requests: write

jobs:
  recompute:
    name: Compute AI vs Human attribution
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository (full history)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Compute AI vs Human attribution
        env:
          GITHUB_TOKEN: ${{ github.token }}
        run: |
          node .github/scripts/ai-attribution.js

      - name: Post/update PR comment with attribution
        uses: actions/github-script@v7
        env:
          ATTRIBUTION_MD: ${{ env.ATTRIBUTION_MD }}
          ATTRIBUTION_SUMMARY: ${{ env.ATTRIBUTION_SUMMARY }}
        with:
          script: |
            const marker = '<!-- ai-attribution-marker -->';
            const body = process.env.ATTRIBUTION_MD || '';
            const { owner, repo } = context.repo;
            const number = context.payload.pull_request.number;

            // Find existing bot comment that contains the marker
            const { data: comments } = await github.rest.issues.listComments({
              owner, repo, issue_number: number, per_page: 100
            });
            const existing = comments.find(
              c => c.user && c.user.type === 'Bot' && typeof c.body === 'string' && c.body.includes(marker)
            );

            if (existing) {
              await github.rest.issues.updateComment({
                owner, repo, comment_id: existing.id, body
              });
            } else {
              await github.rest.issues.createComment({
                owner, repo, issue_number: number, body
              });
            }

            // Write a concise job summary in the Checks UI
            const summary = process.env.ATTRIBUTION_SUMMARY || 'Attribution computed.';
            await core.summary.addRaw(summary).write()
