name: AI Attribution Check

on:
  pull_request:
    types: [opened, edited, synchronize]

permissions:
  contents: read
  issues: write
  pull-requests: write

jobs:
  check:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Ensure jq is available
        run: |
          if ! command -v jq >/dev/null 2>&1; then
            sudo apt-get update -y
            sudo apt-get install -y jq
          fi

      - name: Read PR body and extract declared AI%
        id: ai
        env:
          EVENT_PATH: ${{ github.event_path }}
        run: |
          PR_BODY="$(jq -r '.pull_request.body // ""' "$EVENT_PATH")"
          echo "----- PR BODY -----"
          printf "%s\n" "$PR_BODY"

          # Look for the line with the 'Estimated % of new/changed code from AI' and extract the first integer 0-100.
          DECLARED_AI="$(printf "%s\n" "$PR_BODY" \
            | awk 'BEGIN{IGNORECASE=1}
                   /Estimated % of new\/changed code from AI/ {
                      if (match($0, /([0-9]{1,3})/, m)) { print m[1] }
                   }')"

          if [ -z "$DECLARED_AI" ]; then
            echo "ERROR: Missing 'Estimated % of new/changed code from AI' number in PR body."
            exit 1
          fi

          if ! printf "%s" "$DECLARED_AI" | grep -Eq '^[0-9]{1,3}$'; then
            echo "ERROR: Declared AI% is not a valid integer."
            exit 1
          fi

          if [ "$DECLARED_AI" -lt 0 ] || [ "$DECLARED_AI" -gt 100 ]; then
            echo "ERROR: Declared AI% must be between 0 and 100."
            exit 1
          fi

          echo "declared_ai_pct=$DECLARED_AI" >> "$GITHUB_OUTPUT"

      - name: Compute added/removed lines for this PR
        id: diff
        env:
          EVENT_PATH: ${{ github.event_path }}
        run: |
          BASE_SHA="$(jq -r '.pull_request.base.sha' "$EVENT_PATH")"
          HEAD_SHA="$(jq -r '.pull_request.head.sha' "$EVENT_PATH")"

          # Fetch both SHAs
          git fetch --no-tags --prune --depth=1 origin "+$BASE_SHA:$BASE_SHA" "+$HEAD_SHA:$HEAD_SHA"

          # Sum added/deleted across all changed files (ignores renames weighting)
          git diff --numstat "$BASE_SHA" "$HEAD_SHA" \
            | awk '{add+=$1; del+=$2} END{printf("{\"added\":%d,\"deleted\":%d}\n", add, del)}' > diff.json

          cat diff.json

          ADDED="$(jq -r '.added' diff.json)"
          DELETED="$(jq -r '.deleted' diff.json)"

          echo "added_lines=$ADDED"   >> "$GITHUB_OUTPUT"
          echo "deleted_lines=$DELETED" >> "$GITHUB_OUTPUT"

      - name: Post a PR comment with summary
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          REPO: ${{ github.repository }}
          PR_NUMBER: ${{ github.event.pull_request.number }}
          DECLARED: ${{ steps.ai.outputs.declared_ai_pct }}
          ADDED: ${{ steps.diff.outputs.added_lines }}
          DELETED: ${{ steps.diff.outputs.deleted_lines }}
        run: |
          SUMMARY_JSON="$(jq -n \
            --arg declared "$DECLARED" \
            --arg added "$ADDED" \
            --arg deleted "$DELETED" \
            '{declared_ai_pct: ($declared|tonumber), added_lines: ($added|tonumber), deleted_lines: ($deleted|tonumber)}')"

          printf "AI Attribution Summary:\n%s\n" "$SUMMARY_JSON"

          printf "AI Attribution Summary\n\n\`\`\`json\n%s\n\`\`\`\n" "$SUMMARY_JSON" > body.txt

          curl -s -X POST \
            -H "Authorization: Bearer $GITHUB_TOKEN" \
            -H "Accept: application/vnd.github+json" \
            -d "$(jq -n --arg body "$(cat body.txt)" '{body:$body}')" \
            "https://api.github.com/repos/$REPO/issues/$PR_NUMBER/comments"

      - name: Add step summary
        env:
          DECLARED: ${{ steps.ai.outputs.declared_ai_pct }}
          ADDED: ${{ steps.diff.outputs.added_lines }}
          DELETED: ${{ steps.diff.outputs.deleted_lines }}
        run: |
          {
            echo "### AI Attribution Check"
            echo ""
            echo "- Declared AI%: **$DECLARED**"
            echo "- Added lines: **$ADDED**"
            echo "- Deleted lines: **$DELETED**"
          } >> "$GITHUB_STEP_SUMMARY"
